{"version":3,"sources":["clases/Empleado.js","clases/Empresa.js","App.js","formValid.js","index.js"],"names":["Empleado","nombre","apellido","edad","id","profesion","this","Programador","lenguaje","Diseñador","tipo","Empresa","empleados","programador","push","diseñador","empleadosID","find","e","i","length","Number","danielaVazquezSA","App","initialState","useState","empleado","setEmpleado","setId","listaPorId","setListaPorId","busqueda","setBusqueda","formRef","useRef","className","ref","onSubmit","preventDefault","trim","Swal","fire","icon","title","text","console","log","isFormValid","agregarEmpleados","current","reset","type","name","autoComplete","onChange","target","value","map","onClick","obtenerEmpleadosPorId","undefined","obtenerPromedioEdadEmpleados","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ecf6fafa.chunk.js","sourcesContent":["\nexport class Empleado {\n\n    constructor(nombre, apellido, edad, id, profesion){\n        this.nombre = nombre;\n        this.apellido = apellido;\n        this.edad = edad;\n        this.id = id;\n        this.profesion = profesion;\n    }\n};\n\nexport class Programador extends Empleado { // La clase Programador hereda los métodos y propiedades de Empleado (herencia de prototipos).\n\n    constructor(nombre, apellido, edad, id, profesion, lenguaje){\n        super(nombre, apellido, edad, id, profesion); // El método super() va llamar al constructor de la clase Empleado.\n        this.lenguaje = lenguaje; // Se crea una nueva propiedad para la clase Programador.\n    }\n};\n\nexport class Diseñador extends Empleado {// La clase Diseñador hereda los métodos y propiedades de Empleado (herencia de prototipos).\n\n    constructor(nombre, apellido, edad, id, profesion, tipo){\n        super(nombre, apellido, edad, id, profesion);\n        this.tipo = tipo;// Se crea una nueva propiedad para la clase Diseñador.\n    }\n};\n\n\n","import { Diseñador, Programador } from \"./Empleado\";\n\n//En JS la POO se encuentra basada en herencia de prototipos. Todos los objetos se encuentran vinculados a un prototipo que contienen métodos y propiedades a los que los objetos pueden acceder.\n// Las clases en JS fueron agregadas a partir de ES6 y no funcionan como las clases tradicionales en otros lenguajes que implementan la POO, se dice que solo son azúcar sintáctico porque nos permite\n// hacer lo mismo que una función constructora pero con una sintaxis más agradable. \n\nexport class Empresa {\n\n  constructor(nombre, id){ // El método constructor permite inicializar las propiedades del objeto que se va a crear cuando se instancie la clase.\n      this.nombre = nombre;  // La palabra this aputará al objeto que se instancia a partir de esta clase.\n      this.id = id;  \n      this.empleados = [];\n  }\n\n  agregarEmpleados({nombre, apellido, edad, id, profesion, lenguaje, tipo}){ // Todos los métodos que se encuentran fuera del constructor estarán en el prototipo de los objetos que se instanciarán.\n      if (profesion === 'Programador'){ \n       const programador = new Programador(nombre, apellido, edad, id, profesion, lenguaje);// Se crea una nueva instancia de la clase Programador.\n        this.empleados.push(programador);\n      } else {\n        const diseñador = new Diseñador (nombre, apellido, edad, id, profesion, tipo);// Se crea una nueva instancia de la clase Diseñador.\n        this.empleados.push(diseñador);\n      }\n  }   \n  obtenerEmpleados(){\n    return this.empleados;\n  }\n\n  obtenerEmpleadosPorId (id) {\n    const empleadosID =  [];\n    empleadosID.push(this.empleados.find(e => e.id === id));\n    return empleadosID;\n  }\n\n  obtenerPromedioEdadEmpleados () {\n      let edad = 0;\n      for (let i = 0; i < this.empleados.length; i++){\n        edad = edad + Number (this.empleados[i].edad);\n      };\n      const prom = edad/this.empleados.length;\n      return prom;\n  }\n\n  };\n\n// En el archivo App se instancia a la clase Empresa.\n\n","import React, {useRef, useState } from 'react';\nimport { Empresa } from './clases/Empresa';\nimport {isFormValid} from './formValid';\n\n\n\nconst danielaVazquezSA = new Empresa('Daniela Vazquez SA.', 1); // Se crea una nueva instancia de la clase Empresa.\n\nexport const App = () => {\n\n  const initialState = {\n    nombre: '',\n    apellido:'',\n    edad:'',\n    id:'',\n    profesion:'Click para seleccionar',\n    lenguaje:'Click para seleccionar',\n    tipo:'Click para seleccionar',\n  };\n  const [empleado, setEmpleado] = useState(initialState);\n  const [id, setId] = useState('');\n  const [listaPorId, setListaPorId] = useState([]);\n  const [busqueda, setBusqueda] = useState(false);\n\n  const handlerId = (e) => {\n    setId(e.target.value);\n    setBusqueda(false);\n  };\n  const handleSearch = () => {\n    setListaPorId(danielaVazquezSA.obtenerEmpleadosPorId(id))\n    setBusqueda(true);\n  };\n\n  const formRef = useRef(null);\n\n  const handlerSubmit = (e) => {\n    e.preventDefault();\n    if (isFormValid(empleado)){\n        danielaVazquezSA.agregarEmpleados(empleado); \n        setEmpleado(initialState);\n        formRef.current.reset();\n      }\n  };\n  \n  return (\n   \n    <div className=\"container\">\n      <div className=\"row justify-content-center\">\n          <div className=\"col\">\n              <form ref={formRef} className=\"form-container\" onSubmit={handlerSubmit}>\n                <h1 className=\"nombreEmpresa text-center\">Daniela Vazquez S.A.</h1>\n                <hr/>\n                    <label>Nombre</label>\n                    <input \n                        type=\"text\" \n                        name=\"nombre\" \n                        className=\"form-control my-3\" \n                        autoComplete=\"off\"\n                        onChange={(e) => setEmpleado({...empleado, nombre: e.target.value})}\n                        />\n                    <label>Apellido</label>\n                    <input \n                        type=\"text\" \n                        name=\"apellido\"\n                        className=\"form-control my-3\" \n                        autoComplete=\"off\"\n                        onChange={(e) => setEmpleado({...empleado, apellido: e.target.value})}\n                      />\n                    <label>Edad</label>\n                    <input \n                        type=\"text\" \n                        name=\"edad\"\n                        className=\"form-control my-3\" \n                        autoComplete=\"off\"\n                        onChange={(e) => setEmpleado({...empleado, edad: e.target.value})}  \n                      />\n                    <label>Id</label>\n                    <input \n                        type=\"text\" \n                        name=\"id\"\n                        className=\"form-control my-3\" \n                        autoComplete=\"off\"\n                        onChange={(e) => setEmpleado({...empleado, id: e.target.value})}      \n                      />\n                    <label>Profesión</label>\n                    <select className=\"form-control my-3\" onChange={(e) => setEmpleado({...empleado, profesion: e.target.value})}>\n                      <option >Click para seleccionar</option>\n                      <option >Programador</option>\n                      <option >Diseñador</option>\n                    </select>\n\n                  {empleado.profesion==='Programador' &&\n\n                    <div>\n                      <label>Lenguaje de programación</label>\n                      <select className=\"form-control my-3\" onChange={(e) => setEmpleado({...empleado, lenguaje: e.target.value})}>\n                      <option>Click para seleccionar</option>\n                        <option>PHP</option>\n                        <option>NET</option>\n                        <option>Python</option>\n                      </select>\n                    </div> \n                  }\n                    {empleado.profesion==='Diseñador' &&\n\n                      <div>\n                      <label>Tipo de diseñador</label>\n                      <select className=\"form-control my-3\" onChange={(e) => setEmpleado({...empleado, tipo: e.target.value})}>\n                        <option>Click para seleccionar</option>\n                        <option>Gráfico</option>\n                        <option>Web</option>\n                      </select>\n                      </div> \n                    }\n                  <button \n                      type=\"submit\"\n                      className=\"btn btn-primary btn-block my-3\"\n                      autoComplete=\"off\"\n                      >\n                          Agregar empleado\n                  </button>\n              </form>\n          </div>\n              <div className=\"col\"> \n                <div className=\"form-container\" >\n                <h3 className=\"text-center\">Lista de empleados</h3>\n                      {\n                        danielaVazquezSA.empleados.map((empleado, i) =>         \n                            <ul key={i}>\n                              <hr/>\n                              <h5><b>{`${empleado.nombre} ${empleado.apellido}`}</b></h5>\n                              <li>{empleado.edad} años</li>\n                              <li>id: {empleado.id} </li>\n                              <li>{`${empleado.profesion} `} {empleado.lenguaje}{empleado.tipo}</li>\n                            </ul>\n                        )\n                      }\n                  <hr/>\n                  <label>Filtrar empleado por id:</label>\n                  <input \n                      onChange ={handlerId}\n                      type=\"text\" \n                      className=\"form-control my-3\" \n                      autoComplete=\"off\"\n                    />\n                  <button \n                  onClick = {handleSearch}\n                  className=\"btn btn-primary btn-block mb-3\"\n                  autoComplete=\"off\"\n                  >\n                    Buscar\n                  </button>\n                  <hr/>\n                  {\n                    listaPorId[0] !==undefined ?\n                    <ul>\n                        <h5><b>{`${listaPorId[0].nombre} ${listaPorId[0].apellido}`}</b></h5>\n                        <li>{listaPorId[0].edad} años</li>\n                        <li>id: {listaPorId[0].id} </li>\n                        <li>{`${listaPorId[0].profesion} `} {listaPorId[0].lenguaje}{listaPorId[0].tipo}</li>\n                    </ul>\n                    :\n                    (id!== '' && busqueda)&&\n                    <div className=\"alert alert-danger\">\n                        No se encontró un empleado que coincida con el id\n                    </div>\n                  }\n                   <hr/>\n                  <label className=\"d-block\">Promedio de edad: {(danielaVazquezSA.empleados.length > 0) && danielaVazquezSA.obtenerPromedioEdadEmpleados()}\n                    </label>\n              </div>\n              </div>                             \n    </div>\n</div>\n  );\n}\n","import Swal from 'sweetalert2';\n\nexport const isFormValid = (empleado) => {\n\n    if(empleado.nombre.trim().length === 0) {\n        Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'El nombre es requerido'\n      })\n        return false;\n    } else if (empleado.apellido.trim().length === 0){\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'El apellido es requerido'\n      })\n        return false;\n    } else if (empleado.edad.length === 0 ) {\n      console.log(typeof empleado.edad)\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'La edad es requerida'\n      })\n        return false;\n    } else if (empleado.id.length === 0 ) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'El id es requerido'\n      })\n        return false;\n    } else if (empleado.profesion === 'Click para seleccionar'){\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'La profesión es requerida'\n      })\n      return false;\n    } else if(empleado.profesion === 'Programador' &&  empleado.lenguaje === 'Click para seleccionar'){\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'El lenguaje es requerido'\n      })\n      return false;\n    } else if(empleado.profesion === 'Diseñador' &&  empleado.tipo === 'Click para seleccionar'){\n      Swal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'El tipo de diseñador es requerido'\n      })\n      return false;\n    \n    }\n    return true;\n  };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\nimport './index.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}